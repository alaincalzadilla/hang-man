{"version":3,"sources":["Underscore.js","Word.js","Key.js","Keyboard.js","FailsList.js","YouWonLose.js","Button.js","AnimateSVG.js","Diagram.js","Level.js","WholeWord.js","Points.js","App.js","serviceWorker.js","index.js"],"names":["StyledUnderscore","styled","div","_templateObject","StyledSpan","span","_templateObject2","props","show","showLetterOnLoosing","Underscore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showLetter","nextProps","nextState","incrementCounterOnMatch","setState","reset","showOnLoosing","react_default","a","createElement","letter","React","Component","StyledWordDiv","Word_templateObject","Word","words","selectedWord","counterOfMatches","defaultState","fetchWordFromDictionaryAPI","bind","assertThisInitialized","IsTheLetterHere","SelectWord","wordLoaded","randomNumber","Math","floor","random","length","prev","word","indices","idx","indexOf","push","youWon","_this2","URL","endPointUrl","difficulty","concat","fetch","method","then","response","text","split","prevProps","keyClicked","incrementGuesses","wholeWord","_this3","ocurrence","map","src_Underscore","key","youLost","Keybutton","button","Key_templateObject","Key","used","keyPressed","disabled","onClick","handleKey","StyledKeyboard","Keyboard_templateObject","Keyboard","alphabet","toConsumableArray","Array","e","String","fromCharCode","src_Key","StyledFail","FailsList_templateObject","StyledSlot","FailsList_templateObject2","FailsList","maxFails","failList","slot","Stylediv","YouWonLose_templateObject","YouWonLose","children","StyledButton","Button_templateObject","Button","handleClick","name","AnimateSVG","Fragment","attributeName","attributeName1","from","from1","to","to1","dur","fill","attributeName2","from2","to2","StyledSVG","svg","Diagram_templateObject","Diagram","version","baseProfile","xmlns","x1","x2","y1","y2","stroke","strokeWidth","guesses","cx","cy","r","className","d","StyledDiv","Level_templateObject","Level","quantity","decreaseQuantity","increaseQuantity","changeDifficultyLevel","maxDifficulty","InputDiv","WholeWord_templateObject","WholeWord","query","inputWholeWord","handleInput","placeholder","value","onChange","target","PointsDiv","Points_templateObject","Points","longestStreak","localStorage","leader","StyledApp","App_templateObject","StyledIntroDiv","App_templateObject2","StyledHeader","header","_templateObject3","App","youLose","intro","maxAmountOfGuesses","getPlayer","startTheGame","resetState","str","arguments","undefined","level","boolean","Storage","src_WholeWord","src_Level","src_Word","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c07651d9.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledUnderscore = styled.div`\n  border-bottom: 5px solid;\n  width: 70px;\n  height: 55px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledSpan = styled.span`\n  text-transform: uppercase;\n  font-size: 40px;\n  color: ${props => props.show ? 'black' : ((props.showLetterOnLoosing) && 'rgba(228, 16, 16, 0.47)')};\n`;\n\n\nclass Underscore extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showLetter: false,\n      showLetterOnLoosing: false\n    }\n  }\n\n// makes sure once a letter is discovered it remains uncovered\n  componentWillUpdate(nextProps, nextState) {\n\n    if (this.props.show !== nextProps.show && nextProps.show) {\n      this.props.incrementCounterOnMatch();\n      this.setState({showLetter: true})\n    }\n\n    if(nextProps.reset)\n      this.setState({show: false})\n// this is to showing the remaining letters when the\n// player loses the game\n    if(this.props.showOnLoosing !== nextProps.showOnLoosing && nextProps.showOnLoosing){\n      this.setState({showLetterOnLoosing:true})\n    }\n  }\n\n  render() {\n    return (\n      <StyledUnderscore>\n        <StyledSpan show={this.state.showLetter} showLetterOnLoosing={this.state.showLetterOnLoosing}>{(this.state.showLetter || this.state.showLetterOnLoosing)?this.props.letter:''}</StyledSpan>\n      </StyledUnderscore>\n    );\n  }\n}\n\nexport default Underscore;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Underscore from './Underscore.js';\n\nconst StyledWordDiv = styled.div`\n  margin: auto;\n  grid-column: 1/-1;\n  grid-row: 2/3;\n  justify-items: center;\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: 20px;\n`;\n\nclass Word extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      words: [],\n      selectedWord: '',\n      counterOfMatches: 0\n    }\n// doesnt include words to avoid making another\n// API call\n    this.defaultState = {\n      selectedWord: '',\n      counterOfMatches: 0\n    }\n\n    this.fetchWordFromDictionaryAPI = this.fetchWordFromDictionaryAPI.bind(this);\n    this.IsTheLetterHere = this.IsTheLetterHere.bind(this);\n    this.SelectWord = this.SelectWord.bind(this);\n    this.incrementCounterOnMatch = this.incrementCounterOnMatch.bind(this);\n  }\n// this function is called everytime we need to generate a new word\n  SelectWord() {\n    this.props.wordLoaded(true);\n    //generates a random index to pull a word from the words array\n    const randomNumber = Math.floor(Math.random() * (this.state.words.length + 1));\n    this.setState(prev => ({\n      selectedWord: prev.words[randomNumber],\n    }))\n  }\n\n\n//returns an array of indexes where the character is found\n  IsTheLetterHere(letter, word) {\n    let indices = [];\n    let idx = word.indexOf(letter);\n\n    while (idx !== -1){\n      indices.push(idx);\n      idx = word.indexOf(letter, idx + 1);\n    }\n\n    return indices\n  }\n//this is to track if the user wins\n  incrementCounterOnMatch() {\n    this.setState(prev => ({\n        counterOfMatches: prev.counterOfMatches+1\n      })\n    )\n  }\n// decides if the player wins the game\n  componentWillUpdate(nextProps, nextState){\n    if(nextProps.reset && nextProps !== this.props)\n      this.setState(this.defaultState, this.SelectWord);\n    else {\n      if(nextState.counterOfMatches === this.state.selectedWord.length && this.state.selectedWord.length) {\n        this.props.youWon();\n      }\n    }\n  }\n\n  fetchWordFromDictionaryAPI(){\n    const URL = \"http://app.linkedin-reach.io/words\";\n    const endPointUrl = (this.props.difficulty)?URL.concat(`?difficulty=${this.props.difficulty}`):URL;\n\n    fetch(endPointUrl, {\n      method: \"GET\"\n    })\n    .then(response => response.text())\n    .then(text => {\n      this.setState({words: text.split('\\n')}, this.SelectWord)\n    })\n  }\n// if the difficulty parameter is updated we need\n// to fetch again\n  componentDidUpdate(prevProps){\n    (this.props.difficulty !== prevProps.difficulty) &&\n    this.fetchWordFromDictionaryAPI()\n  }\n// this prevents the component from rendering if the\n  // clicked key is not a match\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.keyClicked !== nextProps.keyClicked\n      && nextProps.keyClicked\n      && !this.IsTheLetterHere(nextProps.keyClicked, nextState.selectedWord).length\n    ) {\n        this.props.incrementGuesses()\n        return false;\n      }\n\n    if (nextProps.wholeWord\n        && nextProps.wholeWord !== this.state.selectedWord){\n          this.props.incrementGuesses('FW')\n          return false;\n        }\n    return true;\n  }\n\n  componentDidMount() {\n    this.fetchWordFromDictionaryAPI()\n  }\n\n  render() {\n    const keyClicked = this.props.keyClicked;\n    const ocurrence=this.IsTheLetterHere((keyClicked?keyClicked:' '), this.state.selectedWord);\n    return (this.state.selectedWord)?\n      (\n        <StyledWordDiv>\n          {this.state.selectedWord.split('').map((letter, idx) => {\n              return <Underscore\n                        key={idx}\n                        letter={letter}\n                        show={~ocurrence.indexOf(idx) || this.props.wholeWord === this.state.selectedWord}\n                        showOnLoosing={this.props.youLost}\n                        incrementCounterOnMatch={this.incrementCounterOnMatch}\n                        reset={this.props.reset}\n                     />\n            }\n          )}\n        </StyledWordDiv>\n    ):\n    (<StyledWordDiv>\n      <h3>Searching the Dictionary...</h3>\n    </StyledWordDiv>\n  );\n  }\n}\n\nexport default Word;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Keybutton = styled.button`\n  width: 60px;\n  height: 60px;\n  border: 3px solid #000;\n  border-radius: 8px;\n  box-shadow: 0 6px #666;\n  font-size: 20px;\n  font-weight: bold;\n\n  :hover {\n    background-color: #fff;\n  }\n\n  :active {\n\t  box-shadow: 0 5px #666;\n\t  transform: translateY(4px);\n\t}\n`;\n\nclass Key extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      used: false\n    }\n  }\n// this is to disable the already clicked letter and calls setState on App\n// to update the keyClicked property on its state\n  handleKey(keyPressed) {\n    this.setState({used: true});\n    this.props.keyClicked(keyPressed);\n  }\n\n  render() {\n    return (\n      <Keybutton disabled={this.state.used || !this.props.wordLoaded} onClick={() => {this.handleKey(this.props.letter)}}>\n        {this.props.letter}\n      </Keybutton>\n    );\n  }\n}\n\nexport default Key;\n","import React from 'react';\nimport Key from './Key.js';\nimport styled from 'styled-components';\n\nconst StyledKeyboard = styled.div`\n  grid-row: 3/4;\n  display: grid;\n  grid-template-rows: repeat(3, 1fr);\n  grid-auto-flow: column;\n  grid-column: 1/-1;\n  justify-content: center;\n  align-self: center;\n  grid-gap: 10px;\n  `;\n\nexport default function Keyboard(props){\n\n  const alphabet = [...Array(26)].map((e,idx) => String.fromCharCode(idx+97));\n\n  return(\n    <StyledKeyboard>\n      {alphabet.map(letter => <Key\n                              key={letter}\n                              letter={letter}\n                              keyClicked={props.keyClicked}\n                              wordLoaded={props.wordLoaded}\n                              >\n                                {letter}\n                              </Key>)}\n    </StyledKeyboard>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledFail = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(6, 1fr);\n  align-content: center;\n  justify-content: center;\n  margin: auto;\n  grid-column: 1/2;\n\n  h2{\n    text-transform: uppercase;\n    grid-column: 1/-1;\n\n    span {\n      color: red;\n    }\n  }\n`;\n\n\nconst StyledSlot = styled.div`\n  background-color: #f1f1f1;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  p {\n    color: red;\n    font-size: 30px;\n    margin: 0;\n  }\n\n`;\n\nexport default function FailsList(props) {\n  const maxFails = [...Array(6)];\n\n\n  return (\n    <StyledFail>\n      <h2> Remaining Guesses: <span>{6 - props.failList.length}</span></h2>\n      {maxFails.map((slot, idx) =>\n        <StyledSlot key={idx}>\n          {(props.failList[idx]) && <p> {props.failList[idx]}</p>}\n        </StyledSlot>\n      )}\n    </StyledFail>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Stylediv = styled.div`\n  display: grid;\n  grid-row: 3/4;\n  grid-column: 1/-1;\n  justify-content: center;\n  align-content: center;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  margin: auto;\n  justify-items: center;\n\n  button {\n    border: 1px solid #fff;\n    border-radius: 5px;\n    padding: 5px;\n    color: #000;\n\n    :hover:enabled {\n      background: #666;\n      color: white;\n    }\n\n  }\n\n  h2 {\n    grid-column: 1/-1;\n  }\n`;\n\nexport default function YouWonLose(props) {\n  return (\n    <Stylediv>\n      <h2>{props.text}</h2>\n      {props.children}\n    </Stylediv>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  text-transform: uppercase;\n  color: black;\n\n  :disabled {\n    color: white !important;\n    background: f9f9f9 !important;\n  }\n\n`;\n\nexport default function Button(props) {\n  function handleClick(){\n    props.handleClick();\n  }\n\n  return (\n    <StyledButton disabled={props.disabled} onClick={handleClick}>\n      {props.name}\n    </StyledButton>\n  );\n}\n","import React from 'react';\n\nexport default function AnimateSVG(props){\n  return (\n    <React.Fragment>\n      <animate\n         attributeName={props.attributeName1} from={props.from1} to={props.to1}\n         dur=\"5s\"\n         fill=\"freeze\"\n       />\n       <animate\n            attributeName={props.attributeName2} from={props.from2} to={props.to2}\n            dur=\"5s\"\n            fill=\"freeze\"\n       />\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport AnimateSVG from './AnimateSVG.js';\n\n\nconst StyledSVG = styled.svg`\n  height: 300px;\n  width: 200px;\n  grid-row: -3/-1;\n  grid-column: -2/-1;\n`;\n\nexport default function Diagram(props) {\n\n  return(\n    <StyledSVG\n       version=\"1.1\"\n       baseProfile=\"full\"\n       xmlns=\"http://www.w3.org/2000/svg\">\n       {[...Array(5)].map((slot,idx) =>\n         <line key={idx} x1={40*idx} x2={40*(idx+1)} y1=\"250\" y2=\"270\" stroke=\"black\" strokeWidth=\"5\"/>\n       )}\n       <line x1=\"0\" x2=\"200\" y1=\"250\" y2=\"250\" stroke=\"black\" strokeWidth=\"5\"/>\n       <line x1=\"150\" x2=\"150\" y1=\"190\" y2=\"220\" stroke=\"orange\" strokeWidth=\"5\">\n         {(props.guesses > 5) &&\n\n           <AnimateSVG\n             attributeName1=\"y2\"\n             from1=\"220\"\n             to1=\"180\"\n             attributeName2=\"y1\"\n             from2=\"190\"\n             to2=\"150\"\n           />\n  \n            }\n       </line>\n       <line x1=\"150\" x2=\"130\" y1=\"220\" y2=\"250\" stroke=\"orange\" strokeWidth=\"5\">\n         {(props.guesses > 5) &&\n\n           <AnimateSVG\n             attributeName1=\"y2\"\n             from1=\"250\"\n             to1=\"210\"\n             attributeName2=\"y1\"\n             from2=\"220\"\n             to2=\"180\"\n           />\n\n            }\n       </line>\n       <line x1=\"150\" x2=\"170\" y1=\"220\" y2=\"250\" stroke=\"orange\" strokeWidth=\"5\">\n         {(props.guesses > 5) &&\n\n           <AnimateSVG\n             attributeName1=\"y2\"\n             from1=\"250\"\n             to1=\"210\"\n             attributeName2=\"y1\"\n             from2=\"220\"\n             to2=\"180\"\n           />\n            }\n       </line>\n       <line x1=\"130\" x2=\"170\" y1=\"200\" y2=\"200\" stroke=\"orange\" strokeWidth=\"5\">\n           {(props.guesses > 5) &&\n\n             <AnimateSVG\n               attributeName1=\"y2\"\n               from1=\"200\"\n               to1=\"160\"\n               attributeName2=\"y1\"\n               from2=\"200\"\n               to2=\"160\"\n             />\n\n              }\n       </line>\n       <circle cx=\"150\" cy=\"175\" r=\"15\" stroke=\"orange\" fill=\"transparent\" strokeWidth=\"5\">\n         {(props.guesses > 5) &&\n\n           <AnimateSVG\n             attributeName1=\"cy\"\n             from1=\"175\"\n             to1=\"140\"\n             attributeName2=\"cx\"\n             from2=\"150\"\n             to2=\"135\"\n           />\n            }\n       </circle>\n\n       <path className={`basePath ${(props.guesses >= 1) && \"hanger\"}`} d=\"M10 250 v-20 h80 v20\" fill=\"transparent\" stroke=\"black\" strokeWidth=\"5\"/>\n       <line className={`hangerPath ${(props.guesses >= 2) && \"hanger\"}`} x1=\"50\" x2=\"50\" y1=\"230\" y2=\"60\" stroke=\"black\" strokeWidth=\"5\"/>\n       <line className={`hangerPath ${(props.guesses >= 3) && \"hanger\"}`} x1=\"50\" x2=\"140\" y1=\"60\" y2=\"60\" stroke=\"black\" strokeWidth=\"5\"/>\n       <line className={`hangerPath ${(props.guesses >= 4) && \"hanger\"}`} x1=\"140\" x2=\"150\" y1=\"60\" y2=\"80\" stroke=\"black\" strokeWidth=\"5\"/>\n\n       <line className={`hangerPath ${(props.guesses >= 5) && \"hanger\"}`} x1=\"150\" x2=\"150\" y1=\"80\" y2=\"160\" stroke=\"black\" strokeWidth=\"2\">\n           {(props.guesses > 5) && <animate\n                attributeName=\"y2\" from=\"160\" to=\"150\"\n                dur=\"5s\"\n                fill=\"freeze\"\n                />\n              }\n       </line>\n\n       {(props.guesses > 5) && <circle cx=\"150\" cy=\"152\" r=\"4\" stroke=\"black\" strokeWidth=\"4\" fill=\"transparent\" />}\n\n\n\n    </StyledSVG>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 50px 1fr;\n  grid-gap: 20px;\n  justify-content: center;\n  border: 3px solid #666;\n  border-radius: 5px;\n  padding: 20px;\n  justify-items: center;\n  align-items: center;\n\n  p {\n    grid-column: 1/-1;\n    margin: 0;\n  }\n\n  button {\n    border: 1px solid #000;\n    border-radius: 5px;\n\n    :hover {\n      background: black;\n      color: white;\n    }\n\n    [disabled] {\n      background: white !important;\n      color: white !important;\n    }\n  }\n`;\n\nclass Level extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quantity: 0\n    }\n\n    this.decreaseQuantity = this.decreaseQuantity.bind(this);\n    this.increaseQuantity = this.increaseQuantity.bind(this);\n\n  }\n\n  decreaseQuantity() {\n      this.setState(prev => (\n        (prev.quantity > 0)?{quantity: prev.quantity - 1}:{quantity: prev.quantity}\n      ), () => this.props.changeDifficultyLevel(this.state.quantity))\n  }\n\n  increaseQuantity() {\n      this.setState(prev => (\n        (prev.quantity < this.props.maxDifficulty)?{quantity: prev.quantity + 1}:{quantity: prev.quantity}\n      ), () => this.props.changeDifficultyLevel(this.state.quantity))\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    return (this.state.quantity !== nextState.quantity)\n  }\n\n  render() {\n    return (\n      <StyledDiv>\n        <p>Difficulty</p>\n        <button onClick={this.decreaseQuantity}> - </button>\n        <span>{(!this.state.quantity)?'random':this.state.quantity}</span>\n        <button onClick={this.increaseQuantity}> + </button>\n      </StyledDiv>\n    );\n  }\n}\n\nexport default Level\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button.js';\n\nconst InputDiv = styled.div`\n display: grid;\n grid-template-columns: 3fr 1fr;\n padding: 20px;\n border: 3px solid #666;\n border-radius: 5px;\n grid-gap: 10px;\n align-self: center;\n justify-self: center;\n\n\n input {\n   border: 0;\n }\n`;\n// this is just a regular input component\nclass WholeWord extends React.Component{\n  constructor (props){\n    super(props);\n\n    this.state = {\n      query: ''\n    }\n\n    this.inputWholeWord = this.inputWholeWord.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(query){\n    this.setState({query})\n  }\n\n  inputWholeWord(){\n    this.props.inputWholeWord(this.state.query)\n    this.setState({query:''});\n  }\n\n  render(){\n    return (\n      <InputDiv>\n        <input\n         placeholder={this.props.placeholder}\n         value={this.state.query}\n         onChange={e => this.handleInput(e.target.value)}\n         />\n\n         <Button disabled={!this.state.query} name={this.props.name} handleClick={this.inputWholeWord} />\n\n      </InputDiv>\n    );\n  }\n}\n\nexport default WholeWord;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst PointsDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  text-transform: capitalize;\n  margin-left: auto;\n`;\n\n\n\nexport default function Points(props){\n\n    if (props.longestStreak>localStorage.longestStreak){\n      localStorage.leader = props.name;\n      localStorage.longestStreak = props.longestStreak;\n    }\n\n\n  return(\n    <PointsDiv>\n      <p>{`Leader:  ${localStorage.leader}`}</p>\n      <p>{`Longest Streak:  ${localStorage.longestStreak}`}</p>\n    </PointsDiv>\n\n  );\n}\n","import React, { Component } from 'react';\nimport Word from './Word.js';\nimport Keyboard from './Keyboard.js';\nimport FailList from './FailsList.js';\nimport styled from 'styled-components';\nimport YouWonLose from './YouWonLose.js';\nimport Button from './Button.js';\nimport Diagram from './Diagram.js';\nimport './App.css';\nimport Level from './Level.js';\nimport WholeWord from './WholeWord.js';\nimport Points from './Points.js';\n\nconst StyledApp = styled.div`\n  display: grid;\n  grid-template-rows: 70px 1fr 230px 1fr 200px;\n  grid-template-columns: 2fr 1fr;\n  grid-row-gap: 20px;\n  max-width: 960px;\n  margin: auto;\n  height: 100vh;\n  justify-content: center;\n  margin: auto;\n`;\n\nconst StyledIntroDiv = styled.div`\n  grid-row: 2/4;\n  grid-column: 1/-1;\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  grid-gap: 20px;\n  grid-template-columns: 2fr 2fr 1fr;\n  justify-items: center;\n  align-items: center;\n  border-radius: 5px;\n\n  h2 {\n    grid-column: 1/-1;\n  }\n\n  button {\n    border: 1px solid #fff;\n    border-radius: 5px;\n    padding: 5px;\n    color: #000;\n\n    :hover:enabled {\n      background: #666;\n      color: white;\n    }\n\n  }\n\n`;\n\nconst StyledHeader = styled.header`\n  margin: auto;\n  grid-column: 1/-1;\n  display: flex;\n  justify-content: center;\n  h1 {\n    text-transform: uppercase;\n\n    span {\n      color: red;\n    }\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      keyClicked: '',\n      wholeWord: '',\n      youWon: false,\n      youLose: false,\n      guesses: 0,\n      failList: [],\n      difficulty: '',\n      wordLoaded: false,\n      name: '',\n      longestStreak: 0,\n      intro: true\n    }\n\n    this.defaultState = {\n      keyClicked: '',\n      wholeWord: '',\n      youWon: false,\n      youLose: false,\n      guesses: 0,\n      failList: [],\n      wordLoaded: false\n    };\n    this.reset = false;\n\n    this.maxAmountOfGuesses = 6;\n\n    this.getPlayer = this.getPlayer.bind(this);\n    this.inputWholeWord = this.inputWholeWord.bind(this);\n    this.wordLoaded = this.wordLoaded.bind(this);\n    this.startTheGame = this.startTheGame.bind(this);\n    this.changeDifficultyLevel = this.changeDifficultyLevel.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.keyClicked = this.keyClicked.bind(this);\n    this.youWon = this.youWon.bind(this);\n    this.incrementGuesses = this.incrementGuesses.bind(this);\n  }\n//function gets called with every click on the Keyboard\n// this is the place where to implement keyboard input\n  keyClicked(keyClicked) {\n    this.setState({keyClicked})\n  }\n// gets called with every fail, checks if the amount of fails reached\n// max allowed guesses and resets the longest streak\n  incrementGuesses(str=this.state.keyClicked){\n    if(this.state.guesses+1 === this.maxAmountOfGuesses)\n      this.setState({\n        youLose: true,\n        longestStreak: 0\n      })\n\n      this.setState(prev => ({\n        guesses: prev.guesses+1,\n        failList: prev.failList.concat(str),\n        wholeWord:''\n      }))\n  }\n\n  changeDifficultyLevel(level){\n    this.setState(() => (level)?{difficulty: level}:'')\n  }\n//this function shows the intro modal so the user can change difficulty\n// without loosing progress\n  startTheGame(){\n    this.setState(prev => ({\n      intro: !prev.intro\n    }))\n    this.resetState();\n  }\n// the request to the API came back\n  wordLoaded(boolean){\n    this.setState({wordLoaded: boolean})\n  }\n// this function resets the state but keeps settings and progress\n// this.defaultState doesn't include longestStreak, difficulty and name\n  resetState(){\n    this.reset = true;\n    this.setState(this.defaultState);\n  }\n// this gets passed down to the input box to check if the user\n// has typed the rigth word\n  inputWholeWord(query){\n    this.setState({wholeWord: query})\n  }\n// adds 1 to the streak\n  youWon() {\n    if (!this.state.youWon)\n    this.setState(prev => ({\n      youWon: true,\n      longestStreak: prev.longestStreak + 1\n    }))\n  }\n// captures the player's name and resets the streak\n  getPlayer(name){\n    this.setState({\n      name,\n      longestStreak: 0\n    })\n  }\n\n  componentDidUpdate(){\n    this.reset = false\n  }\n// sets up the local storage for storing the leader\n  componentDidMount(){\n    if (typeof(Storage) !== \"undefined\"){\n      (!localStorage.longestStreak) && (localStorage.longestStreak = 0)\n    }\n  }\n\n  render() {\n    return (\n      <StyledApp className=\"App\">\n        <StyledHeader>\n          <h1>hang{(this.state.youLose)&&<span>ed</span>} man</h1>\n        </StyledHeader>\n\n        {(this.state.intro)?\n        <StyledIntroDiv>\n          <h2>Welcome! Please enter your name and select difficulty level</h2>\n\n          {(!this.state.name)? <WholeWord\n              inputWholeWord={this.getPlayer}\n              name='Enter'\n              placeholder='Enter your name'\n              />\n            : <Button name=\"Not me\" handleClick={() => this.setState({name:''})} />\n          }\n\n          <Level\n             maxDifficulty={10}\n             changeDifficultyLevel = {this.changeDifficultyLevel}\n           />\n\n\n\n         <Button disabled={(!this.state.name)?'disabled':''} name=\"start\" handleClick={this.startTheGame} />\n         </StyledIntroDiv>\n        :(\n          <React.Fragment>\n            {(this.state.youWon)?\n              <YouWonLose text='Well done!'>\n                <Button name='replay' handleClick={this.resetState} />\n\n                <Button name=\"settings\" handleClick={this.startTheGame} />\n\n              </YouWonLose>\n              :(this.state.youLose)?\n              <YouWonLose text='You Lost!'>\n                <Button name='replay' handleClick={this.resetState} />\n\n                <Button name=\"settings\" handleClick={this.startTheGame} />\n\n            </YouWonLose>\n              :(\n                <React.Fragment>\n                  <Keyboard keyClicked={this.keyClicked} wordLoaded={this.state.wordLoaded}/>\n\n                  <WholeWord\n                    inputWholeWord={this.inputWholeWord}\n                    name='Check'\n                    placeholder='I know the word!'\n                    />\n                </React.Fragment>\n              )}\n\n            <Word\n            keyClicked={this.state.keyClicked}\n            wholeWord={this.state.wholeWord}\n            youWon={this.youWon}\n            incrementGuesses={this.incrementGuesses}\n            reset = {this.reset}\n            difficulty = {this.state.difficulty}\n            wordLoaded = {this.wordLoaded}\n            youLost={this.state.youLose}\n            />\n\n          <Points name={this.state.name} longestStreak={this.state.longestStreak}/>\n\n\n\n            <FailList\n              failList={this.state.failList}\n              reset = {this.reset}\n             />\n\n\n           <Diagram guesses={this.state.guesses} />\n          </React.Fragment>\n\n        )\n      }\n\n\n    </StyledApp>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}